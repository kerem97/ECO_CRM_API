@model List<GetPendingTaskAssignmentResponse>
@{
    ViewData["Title"] = "Pending Task Assignments";
    Layout = "~/Views/Layout/Index.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="~/HTML/dist/assets/libs/simple-datatables/style.css" rel="stylesheet" type="text/css" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"
            integrity="sha384-vtXRMe3mGCbOeY7l30aIg8H9p3GdeSe4IFlP6G8JMa7o7lXvnz3GFKzPxzJdPfGK"
            crossorigin="anonymous"></script>
</head>
<body>
    <div class="col-md-12 col-lg-12">
        <div class="row justify-content-center">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <div id="noDataAlert" class="alert alert-danger shadow-sm border-theme-white-2" role="alert" style="display:none; margin-top: 10px;">
                            <div class="d-inline-flex justify-content-center align-items-center thumb-xs bg-danger rounded-circle mx-auto me-1">
                                <i class="fas fa-xmark align-self-center mb-0 text-white"></i>
                            </div>
                            <strong>Maalesef</strong> Kayıt bulunamadı.
                        </div>
                        <div class="d-flex justify-content-between align-items-center">
                            <h4 class="card-title">Fiyat Bekleyen Görevler</h4>
                        </div>
                    </div>
                    <div class="card-body pt-0">
                        <div class="table-responsive">
                            <table class="table table-bordered mb-0 table-centered">
                                <thead>
                                    <tr>
                                        <th>Oluşturulma Tarihi</th>
                                        <th>Personel</th>
                                        <th>Müşteri</th>
                                        <th>Açıklama</th>
                                        <th>Abas ID</th>
                                        <th>Durum</th>
                                        <th>Detaylar</th>
                                    </tr>
                                </thead>
                                <tbody id="task-table-body">
                                    @foreach (var task in Model)
                                    {
                                        <tr>
                                            <td>@task.CreatedDate.ToString("dd.MM.yyyy HH:mm")</td>
                                            <td>@task.CreatedByUser</td>
                                            <td>@task.CustomerName</td>
                                            <td>@task.Description</td>
                                            <td>@task.AbasId</td>
                                            <td>@task.Status</td>
                                            <td>
                                                <button class="btn btn-primary btn-sm" data-task-id="@task.Id" onclick="openTaskDetailsModal(@task.Id)">
                                                    Detay Gör
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        <div id="pagination-controls" style="text-align: center; margin-top: 20px;">
                            <button class="btn btn-sm mx-1" onclick="changePage('prev')" style="background-color: #555; border: none; border-radius: 20px; padding: 5px 15px; color: #fff;">
                                ◀ Önceki
                            </button>
                            <span id="currentPage" style="font-size: 16px; font-weight: bold; padding: 0 10px; background-color: #f8f9fa;">1</span>
                            <button class="btn btn-sm mx-1" onclick="changePage('next')" style="background-color: #555; border: none; border-radius: 20px; padding: 5px 15px; color: #fff;">
                                Sonraki ▶
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="taskDetailModal" tabindex="-1" aria-labelledby="taskDetailModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="taskDetailModalLabel">Görev Detayları</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p><strong>Müşteri:</strong> <span id="customerName"></span></p>
                    <p><strong>Oluşturulma Tarihi:</strong> <span id="createdDate"></span></p>
                    <p><strong>Personel:</strong> <span id="createdByUser"></span></p>
                    <p><strong>Abas ID:</strong> <span id="abasId"></span></p>
                    <p><strong>Açıklama:</strong> <span id="description"></span></p>
                    <p><strong>Durum:</strong> <span id="status"></span></p>
                    <p><strong>Miktar 1:</strong> <span id="quantity1"></span></p>
                    <p><strong>Miktar 2:</strong> <span id="quantity2"></span></p>
                    <p><strong>Miktar 3:</strong> <span id="quantity3"></span></p>
                    <p><strong>Miktar 4:</strong> <span id="quantity4"></span></p>
                    <p><strong>Miktar 5:</strong> <span id="quantity5"></span></p>
                    <p><strong>Miktar 6:</strong> <span id="quantity6"></span></p>
                    <p><strong>Miktar 7:</strong> <span id="quantity7"></span></p>
                    <p><strong>Miktar 8:</strong> <span id="quantity8"></span></p>
                    <p><strong>Miktar 9:</strong> <span id="quantity9"></span></p>
                    <p><strong>Miktar 10:</strong> <span id="quantity10"></span></p>
                    <input type="hidden" id="taskId" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                    <button type="button" class="btn btn-primary" onclick="submitOffer()">Teklif Verildi</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        let currentPage = 1;
        const pageSize = 10;
        const token = '@ViewBag.Token';

        $(document).ready(function () {
            fetchData(currentPage);
        });

        function fetchData(page) {
            return $.ajax({
                url: `https://localhost:44309/api/TaskAssignments/pending-tasks?pageNumber=${page}&pageSize=${pageSize}`,
                method: 'GET',
                headers: {
                    'Authorization': 'Bearer ' + token
                },
                success: function (data) {
                    if (data && data.length > 0) {
                        $('#noDataAlert').hide();
                        currentPage = page;
                        $('#currentPage').text(currentPage);
                        updateTable(data);
                    } else {
                        $('#noDataAlert').show();
                    }
                },
                error: function () {
                    alert('Veri alınırken hata oluştu.');
                }
            });
        }

        function updateTable(data) {
            let tbody = $('#task-table-body');
            tbody.empty();
            if (data && data.length > 0) {
                data.forEach(task => {
                    var dateObj = new Date(task.createdDate);
                    var day = ("0" + dateObj.getDate()).slice(-2);
                    var month = ("0" + (dateObj.getMonth() + 1)).slice(-2);
                    var year = dateObj.getFullYear();
                    var hours = ("0" + dateObj.getHours()).slice(-2);
                    var minutes = ("0" + dateObj.getMinutes()).slice(-2);
                    var formattedDate = `${day}-${month}-${year} ${hours}:${minutes}`;

                    tbody.append(`
                        <tr>
                            <td>${formattedDate}</td>
                            <td>${task.createdByUser || ""}</td>
                            <td>${task.customerName || ""}</td>
                            <td>${task.description || ""}</td>
                            <td>${task.abasId || ""}</td>
                            <td>${task.status || ""}</td>
                            <td>
                                <button class="btn btn-primary btn-sm" data-task-id="${task.id}" onclick="openTaskDetailsModal(${task.id})">
                                    Detay Gör
                                </button>
                            </td>
                        </tr>
                    `);
                });
            } else {
                tbody.append('<tr><td colspan="7">Kayıt bulunamadı.</td></tr>'); 
            }
        }

        function changePage(direction) {
            const previousPage = currentPage;

            if (direction === 'next') {
                currentPage++;
            } else if (direction === 'prev' && currentPage > 1) {
                currentPage--;
            }

            fetchData(currentPage).then(function (data) {
                if (data.length === 0) {
                    currentPage = previousPage;
                }
            });
        }
        function openTaskDetailsModal(taskId) {
            $.ajax({
                url: `https://localhost:44309/api/TaskAssignments/taskassignment/${taskId}`,
                method: 'GET',
                success: function (task) {
                    $('#customerName').text(task.customerName);
                    $('#createdDate').text(new Date(task.createdDate).toLocaleString());
                    $('#createdByUser').text(task.createdByUser);
                    $('#abasId').text(task.abasId);
                    $('#description').text(task.description);
                    $('#status').text(task.status);
                    $('#taskId').val(taskId);

                    const quantityFields = [
                        { id: 'quantity1', value: task.quantity1 },
                        { id: 'quantity2', value: task.quantity2 },
                        { id: 'quantity3', value: task.quantity3 },
                        { id: 'quantity4', value: task.quantity4 },
                        { id: 'quantity5', value: task.quantity5 },
                        { id: 'quantity6', value: task.quantity6 },
                        { id: 'quantity7', value: task.quantity7 },
                        { id: 'quantity8', value: task.quantity8 },
                        { id: 'quantity9', value: task.quantity9 },
                        { id: 'quantity10', value: task.quantity10 }
                    ];

                    quantityFields.forEach(field => {
                        if (field.value != null && field.value !== 0) {
                            $(`#${field.id}`).parent().show(); 
                            $(`#${field.id}`).text(field.value);
                        } else {
                            $(`#${field.id}`).parent().hide(); 
                        }
                    });

                    $('#taskDetailModal').modal('show');
                },
                error: function () {
                    alert('Görev detayları alınırken bir hata oluştu.');
                }
            });
        }

        function submitOffer() {
            const taskId = $('#taskId').val();
            const status = 'Teklif Verildi';
            $.ajax({
                url: 'https://localhost:44309/api/TaskAssignments/task/update-status-to-givenoffer',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    id: taskId,
                    status: status
                }),
                success: function () {
                    Swal.fire({
                        title: 'Başarılı!',
                        text: 'İşlem durumu güncellendi.',
                        icon: 'success',
                        confirmButtonText: 'Tamam'
                    }).then(() => {
                        $('#taskDetailModal').modal('hide');
                        location.reload(); 
                    });
                },
                error: function (xhr, status, error) {
                    Swal.fire({
                        title: 'Hata!',
                        text: 'İşlem durumu güncellenirken bir hata oluştu. Lütfen tekrar deneyin.',
                        icon: 'error',
                        confirmButtonText: 'Tamam'
                    });

                }
            });
        }
    </script>
</body>
</html>
