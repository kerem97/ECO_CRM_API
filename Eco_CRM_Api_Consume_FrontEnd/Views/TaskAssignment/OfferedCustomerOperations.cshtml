@model List<DisplayCustomerOperationsStatusGivenOffersResponse>
@{
    ViewData["Title"] = "OfferedCustomerOperations";
    Layout = "~/Views/Layout/Index.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="~/HTML/dist/assets/libs/simple-datatables/style.css" rel="stylesheet" type="text/css" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"
            integrity="sha384-vtXRMe3mGCbOeY7l30aIg8H9p3GdeSe4IFlP6G8JMa7o7lXvnz3GFKzPxzJdPfGK"
            crossorigin="anonymous"></script>
</head>
<body>
    <div class="col-md-12 col-lg-12">
        <div class="row justify-content-center">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <div id="noDataAlert" class="alert alert-danger shadow-sm border-theme-white-2" role="alert" style="display:none; margin-top: 10px;">
                            <div class="d-inline-flex justify-content-center align-items-center thumb-xs bg-danger rounded-circle mx-auto me-1">
                                <i class="fas fa-xmark align-self-center mb-0 text-white"></i>
                            </div>
                            <strong>Maalesef</strong> Kayıt bulunamadı.
                        </div>
                        <div class="d-flex justify-content-between align-items-center">
                            <h4 class="card-title">Teklif Verilecek Operasyonlar</h4>
                        </div>
                    </div>
                    <div class="card-body pt-0">
                        <div class="table-responsive">
                            <table class="table table-bordered mb-0 table-centered">
                                <thead>
                                    <tr>
                                        <th>Operasyon Tarihi</th>
                                        <th>Personel</th>
                                        <th>Müşteri</th>
                                        <th>İletişim Kişisi</th>
                                        <th>Teklif Durumu</th>
                                        <th>Açıklama</th>
                                        <th>İşlem</th>
                                    </tr>
                                </thead>
                                <tbody id="customer-table-body">
                                    @foreach (var operation in Model)
                                    {
                                        <tr>
                                            <td>@operation.OperationDate.ToString("dd.MM.yyyy HH:mm")</td>
                                            <td>@operation.CreatedByUser</td>
                                            <td>@operation.CustomerName</td>
                                            <td>@operation.ContactPerson</td>
                                            <td>@operation.OfferStatus</td>
                                            <td>@operation.Description</td>
                                            <td>
                                                <button class="btn btn-primary btn-sm" data-operation-id="@operation.Id" onclick="openModal(this)" style="background-color: #555; border: none; padding: 5px 10px; text-decoration: none; color: #fff; border-radius: 5px;">
                                                    Fiyat Talep Et
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        <div id="pagination-controls" style="text-align: center; margin-top: 20px;">
                            <button class="btn btn-sm mx-1" onclick="changePage('prev')" style="background-color: #555; border: none; border-radius: 20px; padding: 5px 15px; color: #fff;">
                                ◀ Önceki
                            </button>
                            <span id="currentPage" style="font-size: 16px; font-weight: bold; padding: 0 10px; background-color: #f8f9fa;">1</span>
                            <button class="btn btn-sm mx-1" onclick="changePage('next')" style="background-color: #555; border: none; border-radius: 20px; padding: 5px 15px; color: #fff;">
                                Sonraki ▶
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <div class="modal fade" id="createTaskModal" tabindex="-1" aria-labelledby="createTaskModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="createTaskModalLabel">Görev Oluştur</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="taskForm">
                        <input type="hidden" id="operationId" name="operationId">

                        <div class="mb-3">
                            <label for="abasId" class="form-label">Abas ID</label>
                            <input type="number" class="form-control" id="abasId" name="abasId" required>
                        </div>

                        <div class="mb-3">
                            <label for="description" class="form-label">Açıklama</label>
                            <textarea class="form-control" id="description" name="description" required></textarea>
                        </div>
                        <div class="mb-3" id="quantityContainer">
                            <label for="quantity1" class="form-label">Miktar 1</label>
                            <input type="text" class="form-control quantity-input" id="quantity1" name="quantity1" required>
                        </div>
                        <div id="addQuantityButtonContainer">
                            <button type="button" class="btn btn-sm btn-success mt-2" onclick="addQuantityField()">+ Miktar Ekle</button>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                    <button type="button" class="btn btn-primary" onclick="submitTask()">Gönder</button>
                </div>
            </div>
        </div>
    </div>
    <script>
        let quantityFieldCount = 1;
        let currentPage = 1;
        const pageSize = 8;
        const token = '@ViewBag.Token';

        $(document).ready(function () {
            fetchData(currentPage);
        });

        function fetchData(page) {
            return $.ajax({
                url: `https://localhost:44309/api/CustomerOperations/status-given-offers?pageNumber=${page}&pageSize=10`,
                method: 'GET',
                headers: {
                    'Authorization': 'Bearer ' + token
                },
                success: function (data) {
                    if (data && data.length > 0) {
                        $('#noDataAlert').hide();
                        currentPage = page;
                        $('#currentPage').text(currentPage);
                        updateTable(data);
                    } else {
                        $('#noDataAlert').show();
                    }
                },
                error: function () {
                    alert('Veri alınırken hata oluştu.');
                }
            });
        }

        function updateTable(data) {
            let tbody = $('#customer-table-body');
            tbody.empty();
            if (data && data.length > 0) {
                data.forEach(operation => {
                    var dateObj = new Date(operation.operationDate);
                    var day = ("0" + dateObj.getDate()).slice(-2);
                    var month = ("0" + (dateObj.getMonth() + 1)).slice(-2);
                    var year = dateObj.getFullYear();
                    var hours = ("0" + dateObj.getHours()).slice(-2);
                    var minutes = ("0" + dateObj.getMinutes()).slice(-2);
                    var formattedDate = `${day}-${month}-${year} ${hours}:${minutes}`;
                    tbody.append(`
                            <tr>
                                        <td>${formattedDate}</td>
                                <td>${operation.createdByUser || ""}</td>
                                <td>${operation.customerName || ""}</td>
                                <td>${operation.description || ""}</td>
                                <td>${operation.contactPerson || ""}</td>
                                <td>${operation.offerStatus || ""}</td>
                                <td>
                                    <button class="btn btn-primary btn-sm" data-operation-id="${operation.id}" onclick="openModal(this)" style="background-color: #555; border: none; padding: 5px 10px; text-decoration: none; color: #fff; border-radius: 5px;">
                                        Fiyat Talep Et
                                    </button>
                                </td>
                            </tr>
                        `);
                });
            } else {
                tbody.append('<tr><td colspan="13">Kayıt bulunamadı.</td></tr>');
            }
        }
        function changePage(direction) {
            const previousPage = currentPage;

            if (direction === 'next') {
                currentPage++;
            } else if (direction === 'prev' && currentPage > 1) {
                currentPage--;
            }

            fetchData(currentPage).then(function (data) {
                if (data.length === 0) {
                    currentPage = previousPage; 
                }
            });
        }
        function openModal(button) {
            const operationId = $(button).data('operation-id');
            console.log('Operation ID:', operationId);
            $('#operationId').val(operationId);
            $('#createTaskModal').modal('show');
        }

        function addQuantityField() {
            if (quantityFieldCount < 10) {
                quantityFieldCount++;
                const newQuantityField = `
                        <div class="mb-3">
                            <label for="quantity${quantityFieldCount}" class="form-label">Miktar ${quantityFieldCount}</label>
                                            <input type="text" class="form-control quantity-input" id="quantity${quantityFieldCount}" name="quantity${quantityFieldCount}">
                        </div>
                    `;
                $('#addQuantityButtonContainer').before(newQuantityField);
            }
        }
        $(document).on('input', '.quantity-input', function () {
            var input = $(this);
            var value = input.val().replace(/\D/g, '');
            var formattedValue = value.replace(/\B(?=(\d{3})+(?!\d))/g, '.');
            input.val(formattedValue);
        });

        function submitTask() {
            function removeDots(value) {
                return value ? value.replace(/\./g, '') : '';
            }
            const taskData = {
                operationId: $('#operationId').val(),
                abasId: $('#abasId').val(),
                description: $('#description').val(),
                quantity1: removeDots($('#quantity1').val()), // Noktaları kaldır
                quantity2: removeDots($('#quantity2').val()) || null, // Noktaları kaldır
                quantity3: removeDots($('#quantity3').val()) || null, // Noktaları kaldır
                quantity4: removeDots($('#quantity4').val()) || null, // Noktaları kaldır
                quantity5: removeDots($('#quantity5').val()) || null, // Noktaları kaldır
                quantity6: removeDots($('#quantity6').val()) || null, // Noktaları kaldır
                quantity7: removeDots($('#quantity7').val()) || null, // Noktaları kaldır
                quantity8: removeDots($('#quantity8').val()) || null, // Noktaları kaldır
                quantity9: removeDots($('#quantity9').val()) || null, // Noktaları kaldır
                quantity10: removeDots($('#quantity10').val()) || null,
            };

            console.log('Gönderilen Task Data:', taskData);

            $.ajax({
                url: 'https://localhost:44309/api/TaskAssignments/taskassignment',
                method: 'POST',
                headers: {
                    'Authorization': 'Bearer ' + token,
                    'Content-Type': 'application/json'
                },
                data: JSON.stringify(taskData),
                success: function (response) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Başarılı!',
                        text: 'Görev başarıyla oluşturuldu!',
                        confirmButtonText: 'Tamam'
                    }).then(() => {
                        $('#createTaskModal').modal('hide');
                        location.reload();
                    });
                },
                error: function () {
                    Swal.fire({
                        icon: 'error',
                        title: 'Hata!',
                        text: 'Görev oluşturulurken bir hata oluştu.',
                        confirmButtonText: 'Tamam'
                    });
                }
            });
        }

        document.addEventListener("DOMContentLoaded", function () {
            document.body.style.opacity = 1;
        });
    </script>

</body>
</html>
