@{
    ViewBag.Title = "Index";
    var userOperations = Model as List<DisplayCustomerOperationResponse>;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ECO CRM - Dashboard</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"
            integrity="sha384-vtXRMe3mGCbOeY7l30aIg8H9p3GdeSe4IFlP6G8JMa7o7lXvnz3GFKzPxzJdPfGK"
            crossorigin="anonymous"></script>
    <style>
        body {
            background: linear-gradient(to bottom, #3a3a3a, #1f1f1f);
            margin: 0;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            color: #fff;
            display: flex;
            min-height: 100vh;
            overflow: hidden;
            flex-direction: column;
            padding: 0 20px;
        }

        .form-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 20px;
            margin-left: 100px;
            width: 100%;
            margin-top: 80px;
        }

        .header-title h3 {
            margin: 0;
            color: #fff;
        }

        .header-button {
            display: flex;
            align-items: center;
        }

        .add-operation-btn {
            background-color: #555;
            color: #fff;
            border: none;
            padding: 8px 16px;
            font-size: 14px;
            border-radius: 4px;
            cursor: pointer;
            text-decoration: none;
            transition: background-color 0.3s, transform 0.2s;
            margin-right: 20px;
        }

            .add-operation-btn:hover {
                background-color: #777;
                transform: translateY(-2px);
                color: #fff;
            }

            .add-operation-btn:focus {
                outline: none;
            }

        .modal-header .close {
            position: absolute;
            right: 15px;
            top: 15px;
            background-color: #444; /* Modal ile uyumlu gri tonları */
            color: #fff;
            border: none;
            border-radius: 50%; /* Yuvarlak buton */
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 20px;
            cursor: pointer;
            transition: background-color 0.3s, transform 0.2s;
        }

            .modal-header .close:hover {
                background-color: #777; /* Hover durumunda daha açık gri */
                transform: scale(1.1); /* Hover'da hafif büyüme efekti */
            }

        .navbar {
            background-color: #444;
            padding: 15px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            color: #fff;
            font-weight: bold;
            position: fixed;
            width: 100%;
            top: 0;
            left: 0;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            z-index: 1000;
        }

        .sidebar {
            background-color: #333;
            padding: 20px;
            width: 200px;
            position: fixed;
            top: 60px;
            bottom: 0;
            left: 0;
            display: flex;
            flex-direction: column;
            z-index: 900;
            box-shadow: 2px 0 5px rgba(0, 0, 0, 0.3);
            overflow-y: auto;
        }

            .sidebar a {
                color: #fff;
                text-decoration: none;
                padding: 10px;
                font-size: 16px;
                border-bottom: 1px solid #444;
                margin-bottom: 5px;
                transition: background-color 0.3s, padding-left 0.3s;
                display: flex;
                align-items: center;
            }

                .sidebar a:hover {
                    background-color: #575757;
                    padding-left: 15px;
                }

        .arrow {
            margin-left: 10px;
            transition: transform 0.3s;
        }

        .rotate {
            transform: rotate(90deg);
        }

        h2, h3 {
            margin-left: 220px;
            margin-top: 80px;
            color: #fff;
            text-align: left;
            padding: 0;
        }

        h3 {
            margin-left: 220px;
            margin-bottom: 10px;
            color: #fff;
            text-align: left;
            font-size: 18px;
        }

        table {
            width: calc(100% - 220px);
            margin-left: 100px;
            margin-top: 40px;
            border-collapse: collapse;
            background-color: #444;
            border-radius: 8px;
            overflow: hidden;
            color: #fff;
            font-size: 12px;
        }

        th, td {
            padding: 6px;
            text-align: left;
            color: #fff;
        }

        th {
            background-color: #555;
            color: #fff;
            text-transform: uppercase;
            letter-spacing: 0.05em;
            font-size: 12px;
        }

        td {
            background-color: #666;
            font-size: 12px;
            box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.2);
        }

        tbody tr:hover {
            background-color: #777;
        }

        tbody tr:nth-child(odd) td {
            background-color: #444;
        }

        tbody tr:nth-child(even) td {
            background-color: #666;
        }

        .btn:active,
        .btn:focus {
            outline: none;
            box-shadow: none;
            background-color: #777;
        }
    </style>
</head>
<body>
    <div class="sidebar">
        <a href="/Dashboard/Index/">Ana Sayfa</a>
        <a href="/CustomerOperation/Index/">Tüm İşlemler</a>
        <a href="/Customer/Index">Müşteriler</a>
        <a href="/Account/Logout/">Çıkış</a>
    </div>
    <div class="navbar">
        <div class="eco-crm">ECO CRM</div>
        <div class="user-info">@ViewBag.FullName</div>
    </div>
    <div style="height: 5px; background-color: #000; width: 100%; position: fixed; top: 60px; left: 0; z-index: 999;"></div>
    <div class="form-header">
        <div class="header-title">
            <h3>@ViewBag.FullName Size Ait İşlemler</h3>
        </div>
        <div class="header-button">
            <a href="/CustomerOperation/AddOperation" class="add-operation-btn">Yeni İşlem Ekle</a>
        </div>
    </div>
    <table style="width: 100%;">
        <thead>
            <tr>
                <th>Tarih</th>
                <th>Personel</th>
                <th>Firma</th>
                <th>Müşteri</th>
                <th>Adres</th>
                <th>Yöntem</th>
                <th>Görüşülen</th>
                <th>Planlanan Tarih</th>
                <th>Görüşülen Tarih</th>
                <th>Sebep</th>
                <th>Durum</th>
                <th>Açıklama</th>
                <th>Düzenle</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var operation in userOperations)
            {
                <tr>
                    <td>@operation.OperationDate</td>
                    <td>@operation.CreatedByUser</td>
                    <td>@operation.IsNew</td>
                    <td>@operation.CustomerName</td>
                    <td>@operation.Address</td>
                    <td>@operation.Method</td>
                    <td>@operation.ContactPerson</td>
                    <td>@operation.PlannedDate</td>
                    <td>@operation.ActualDate</td>
                    <td>@operation.Reason</td>
                    <td>@operation.Status</td>
                    <td class="description-cell" style="white-space: normal; word-wrap: break-word;">
                        @operation.Description
                    </td>

                </tr>
            }
        </tbody>
    </table>
    <!-- Düzenleme Modali -->
    <!-- Modal -->
    <div class="modal fade" id="editOperationModal" tabindex="-1" aria-labelledby="editOperationModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content" style="background-color: #333; color: #fff;">
                <div class="modal-header">
                    <h5 class="modal-title">Operasyon Düzenle</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="status" class="form-label">Durum</label>
                        <select id="status" class="form-control">
                            <option value="">Seçiniz</option>
                            <option value="Gerçekleşti">Gerçekleşti</option>
                            <option value="İptal">İptal</option>
                        </select>
                    </div>
                    <div id="meetingStatusDiv" class="mb-3" style="display: none;">
                        <label for="meetingStatus" class="form-label">Planlanan tarihte görüşme gerçekleşti mi?</label>
                        <select id="meetingStatus" class="form-control">
                            <option value="">Seçiniz</option>
                            <option value="yes">Evet</option>
                            <option value="no">Hayır</option>
                        </select>
                    </div>
                    <div class="mb-3" id="cancelReasonDiv" style="display: none;">
                        <label for="cancelReason" class="form-label">İptal Sebebi</label>
                        <textarea id="cancelReason" class="form-control"></textarea>
                    </div>
                    <div class="mb-3" id="updatedStatusDescriptionDiv" style="display: none;">
                        <label for="updatedStatusDescription" class="form-label">Güncellenmiş Durum Açıklaması</label>
                        <textarea id="updatedStatusDescription" class="form-control"></textarea>
                    </div>

                    <div class="mb-3" id="actualDateDiv" style="display: none;">
                        <label for="actualDate" class="form-label">Gerçekleşme Tarihi</label>
                        <input type="datetime-local" id="actualDate" class="form-control">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Kapat</button>
                    <button type="button" id="saveChangesBtn" class="btn btn-primary" style="background-color: #555; border: none;">Kaydet</button>
                </div>
            </div>
        </div>
    </div>



    <div style="position: fixed; bottom: 10px; right: 20px; color: #fff; font-size: 12px;">
        Designed by Eco Software Development ℗
    </div>
    <div id="pagination-controls" style="text-align: center; margin-top: 20px;">
        <button class="btn btn-sm mx-1" onclick="changePage('prev')" style="background-color: #555; border: none; border-radius: 20px; padding: 5px 15px; color: #fff;">
            ◀ Önceki
        </button>
        <span id="currentPage" style="font-size: 16px; font-weight: bold; padding: 0 10px; color: #fff;">1</span>
        <button class="btn btn-sm mx-1" onclick="changePage('next')" style="background-color: #555; border: none; border-radius: 20px; padding: 5px 15px; color: #fff;">
            Sonraki ▶
        </button>
    </div>
    <script>
        let currentPage = 1;
        const pageSize = 10;
        const token = '@ViewBag.Token';

        $(document).ready(function () {
            fetchData(currentPage);
        });

        function fetchData(page) {
            $.ajax({
                url: `https://localhost:44309/api/CustomerOperations/user-operations?pageNumber=${page}&pageSize=${pageSize}`,
                method: 'GET',
                headers: {
                    'Authorization': 'Bearer ' + token
                },
                success: function (data) {
                    currentPage = page;
                    $('#currentPage').text(currentPage);
                    updateTable(data);
                },
                error: function () {
                    alert('Veri alınırken hata oluştu.');
                }
            });
        }

        function updateTable(data) {
            let tbody = $('table tbody');
            tbody.empty();

            data.forEach(operation => {
                const operationDate = operation.operationDate
                    ? new Date(operation.operationDate).toLocaleDateString('tr-TR') + ' ' + new Date(operation.operationDate).toLocaleTimeString('tr-TR', { hour: '2-digit', minute: '2-digit', second: '2-digit' })
                    : '';
                const plannedDate = operation.plannedDate
                    ? new Date(operation.plannedDate).toLocaleDateString('tr-TR') + ' ' + new Date(operation.plannedDate).toLocaleTimeString('tr-TR', { hour: '2-digit', minute: '2-digit', second: '2-digit' })
                    : '';
                const actualDate = operation.actualDate
                    ? new Date(operation.actualDate).toLocaleDateString('tr-TR') + ' ' + new Date(operation.actualDate).toLocaleTimeString('tr-TR', { hour: '2-digit', minute: '2-digit', second: '2-digit' })
                    : '';

                tbody.append(`
                                <tr>
                                    <td>${operationDate}</td>
                                    <td>${operation.createdByUser || ''}</td>
                                    <td>${operation.isNew ? 'Evet' : 'Hayır'}</td>
                                    <td>${operation.customerName || ''}</td>
                                    <td>${operation.address || ''}</td>
                                    <td>${operation.method || ''}</td>
                                    <td>${operation.contactPerson || ''}</td>
                                    <td>${plannedDate}</td>
                                    <td>${actualDate}</td>
                                    <td>${operation.reason || ''}</td>
                                    <td>${operation.status || ''}</td>
                                    <td class="description-cell" style="white-space: normal; word-wrap: break-word;">
                                        ${operation.description || ''}
                                    </td>
                                    <td><button class="btn btn-sm edit-btn" style="background-color: #555; color: #fff; border: none; padding: 5px 10px; border-radius: 5px;" data-operation-id="${operation.id}">Düzenle</button></td>
                                </tr>
                            `);
            });

            $('.edit-btn').off('click').on('click', function () {
                const operationId = $(this).data('operation-id');
                $('#editOperationModal').data('operation-id', operationId);
                $('#editOperationModal').modal('show');
                $('#cancelReasonDiv').hide();
                $('#updatedStatusDescriptionDiv').hide();
                $('#actualDateDiv').hide();
                $('#meetingStatusDiv').hide(); 
                $('#status').val('');
                $('#cancelReason').val('');
                $('#actualDate').val('');
                $('#meetingStatus').val('');
                $('#updatedStatusDescription').val('');
            });
        }

        function changePage(direction) {
            if (direction === 'next') {
                fetchData(currentPage + 1);
            } else if (direction === 'prev' && currentPage > 1) {
                fetchData(currentPage - 1);
            }
        }

        $('#saveChangesBtn').click(function () {
            const operationId = $('#editOperationModal').data('operation-id');
            const status = $('#status').val();
            const cancelReason = $('#cancelReason').val();
            const updatedStatusDescription = $('#updatedStatusDescription').val();
            let actualDate = $('#actualDate').val();
            const meetingStatus = $('#meetingStatus').val();


            let requestData;
            let endpointUrl;

            if (status === "İptal" && !cancelReason) {
                alert('Lütfen iptal sebebini giriniz.');
                return;
            }

            if (status === "Gerçekleşti") {
                const meetingStatus = $('#meetingStatus').val();

                if (meetingStatus === 'yes') {
                    actualDate = $('#plannedDate').val();
                } else if (meetingStatus === 'no' && !actualDate) {
                    alert('Lütfen gerçekleşen tarih bilgisini giriniz.');
                    return;
                }

                const updatedStatusDescription = $('#updatedStatusDescription').val(); 

                if (!updatedStatusDescription) {
                    alert('Lütfen güncellenmiş durum açıklamasını giriniz.');
                    return;
                }

                requestData = JSON.stringify({
                    operationId: operationId,
                    actualDate: actualDate,
                    status: status,
                    updatedStatusDescription: updatedStatusDescription,
                    isMeetingOnPlannedDate: meetingStatus === 'yes'
                });
                endpointUrl = "https://localhost:44309/api/CustomerOperations/complete-operation";
            }
                else if (status === "İptal") {
                    requestData = JSON.stringify({
                        operationId: operationId,
                        cancelReason: cancelReason,
                        status: status
                    });
                    endpointUrl = "https://localhost:44309/api/CustomerOperations/cancel-operation";
                }

            $.ajax({
                url: endpointUrl,
                method: 'POST',
                headers: {
                    'Authorization': 'Bearer ' + token,
                    'Content-Type': 'application/json'
                },
                data: requestData,
                success: function () {
                    $('#editOperationModal').modal('hide');
                    fetchData(currentPage);
                },
                error: function () {
                    $('#editOperationModal').modal('hide');
                    fetchData(currentPage);
                }
            });
        });

        $('#status').change(function () {
            const status = $(this).val();
            if (status === 'İptal') {
                $('#cancelReasonDiv').show();
                $('#actualDateDiv').hide();
                $('#meetingStatusDiv').hide();
                $('#updatedStatusDescriptionDiv').hide();
            } else if (status === 'Gerçekleşti') {
                $('#cancelReasonDiv').hide();
                $('#actualDateDiv').hide();
                $('#meetingStatusDiv').show();
                $('#updatedStatusDescriptionDiv').show();
            } else {
                $('#cancelReasonDiv, #actualDateDiv, #meetingStatusDiv, #updatedStatusDescriptionDiv').hide();
            }
        });

        $('#meetingStatus').change(function () {
            const meetingStatus = $(this).val();
            if (meetingStatus === 'yes') {
                const plannedDate = $('#plannedDate').val();
                $('#actualDate').val(plannedDate);
                $('#actualDateDiv').hide();
            } else if (meetingStatus === 'no') {
                $('#actualDateDiv').show();
                $('#actualDate').val('');
            }
        });

        $('#editOperationModal .close, #editOperationModal .btn-secondary').click(function () {
            $('#editOperationModal').modal('hide');
        });

        document.addEventListener("DOMContentLoaded", function () {
            document.body.style.opacity = 1;
        });
    </script>





</body>
</html>
